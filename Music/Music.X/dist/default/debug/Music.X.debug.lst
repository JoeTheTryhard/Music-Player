

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 05 19:51:34 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	10F200
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	jmp_tab,global,class=ENTRY,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x1C,4
    14      000                     
    15                           ; Version 2.40
    16                           ; Generated 06/12/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC10F200 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50      000                     	;# 
    51      001                     	;# 
    52      002                     	;# 
    53      003                     	;# 
    54      004                     	;# 
    55      005                     	;# 
    56      006                     	;# 
    57      001                     _TMR0	set	1
    58      006                     _GPIO	set	6
    59      000                     _OPTION	set	0
    60      006                     _TRIS	set	6
    61                           
    62                           	psect	cinit
    63      001                     start_initialization:	
    64                           ; #config settings
    65                           
    66      001                     __initialization:
    67      001                     end_of_initialization:	
    68                           ;End of C runtime variable initialization code
    69                           
    70      001                     __end_of__initialization:
    71      001  0064               	clrf	4
    72      002  0A03               	ljmp	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMMON
    75      000                     __pcstackCOMMON:
    76      000                     ??_initialize:
    77      000                     ??_toggleSound:	
    78                           ; 1 bytes @ 0x0
    79                           
    80      000                     ??_main:	
    81                           ; 1 bytes @ 0x0
    82                           
    83                           
    84                           	psect	cstackBANK0
    85      010                     __pcstackBANK0:	
    86                           ; 1 bytes @ 0x0
    87                           
    88      010                     ?_initialize:
    89      010                     ?_toggleSound:	
    90                           ; 1 bytes @ 0x0
    91                           
    92      010                     ?_main:	
    93                           ; 1 bytes @ 0x0
    94                           
    95      010                     toggleSound@pinNumber:	
    96                           ; 1 bytes @ 0x0
    97                           
    98                           
    99                           ; 1 bytes @ 0x0
   100      010                     	ds	1
   101      011                     toggleSound@initialTMR0:
   102                           
   103                           ; 1 bytes @ 0x1
   104      011                     	ds	1
   105      012                     toggleSound@track:
   106                           
   107                           ; 1 bytes @ 0x2
   108      012                     	ds	1
   109      013                     main@counter:
   110                           
   111                           ; 2 bytes @ 0x3
   112      013                     	ds	2
   113      015                     main@track1:
   114                           
   115                           ; 2 bytes @ 0x5
   116      015                     	ds	2
   117      017                     main@track2:
   118                           
   119                           ; 2 bytes @ 0x7
   120      017                     	ds	2
   121                           
   122                           	psect	maintext
   123      003                     __pmaintext:	
   124 ;;
   125 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   126 ;;
   127 ;; *************** function _main *****************
   128 ;; Defined at:
   129 ;;		line 29 in file "GuardianTheme.c"
   130 ;; Parameters:    Size  Location     Type
   131 ;;		None
   132 ;; Auto vars:     Size  Location     Type
   133 ;;  track2          2    7[BANK0 ] struct Track
   134 ;;  track1          2    5[BANK0 ] struct Track
   135 ;;  counter         2    3[BANK0 ] unsigned short 
   136 ;; Return value:  Size  Location     Type
   137 ;;                  1   19[None  ] void 
   138 ;; Registers used:
   139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, pclath, cstack
   140 ;; Tracked objects:
   141 ;;		On entry : B00/0
   142 ;;		On exit  : 0/0
   143 ;;		Unchanged: 0/0
   144 ;; Data sizes:     COMMON   BANK0
   145 ;;      Params:         0       0
   146 ;;      Locals:         0       6
   147 ;;      Temps:          0       0
   148 ;;      Totals:         0       6
   149 ;;Total ram usage:        6 bytes
   150 ;; Hardware stack levels required when called: 1
   151 ;; This function calls:
   152 ;;		_initialize
   153 ;;		_toggleSound
   154 ;; This function is called by:
   155 ;;		Startup code after reset
   156 ;; This function uses a non-reentrant model
   157 ;;
   158                           
   159      003                     _main:	
   160                           ;psect for function _main
   161                           
   162      003                     l597:	
   163                           ;incstack = 0
   164                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+3+pclath+cstack]
   165                           
   166                           
   167                           ;GuardianTheme.c: 31:     initialize();
   168      003  09FE               	fcall	entry__initialize
   169      004                     l599:
   170                           
   171                           ;GuardianTheme.c: 32:     struct Track track1;;GuardianTheme.c: 33:     struct Track tra
      +                          ck2;;GuardianTheme.c: 34:     unsigned short counter;;GuardianTheme.c: 35:     track1.cl
      +                          ocks = 29;
   172      004  0C1D               	movlw	29
   173      005  0035               	movwf	main@track1
   174      006                     l601:
   175                           
   176                           ;GuardianTheme.c: 36:     track2.clocks = 30;
   177      006  0C1E               	movlw	30
   178      007  0037               	movwf	main@track2
   179      008                     l603:
   180                           
   181                           ;GuardianTheme.c: 37:     track1.lastTimeUpdate = 0;
   182      008  0076               	clrf	main@track1+1
   183      009                     l605:
   184                           
   185                           ;GuardianTheme.c: 38:     track2.lastTimeUpdate = 0;
   186      009  0078               	clrf	main@track2+1
   187      00A                     l607:
   188                           
   189                           ;GuardianTheme.c: 40:     {;GuardianTheme.c: 41:         track1.clocks = 3;
   190      00A  0C03               	movlw	3
   191      00B  0035               	movwf	main@track1
   192      00C                     l609:
   193                           
   194                           ;GuardianTheme.c: 42:         track2.clocks = 2;
   195      00C  0C02               	movlw	2
   196      00D  0037               	movwf	main@track2
   197      00E                     l611:
   198                           
   199                           ;GuardianTheme.c: 43:         for (counter = 0; counter<6000; counter++)
   200      00E  0073               	clrf	main@counter
   201      00F  0074               	clrf	main@counter+1
   202      010                     l617:
   203                           
   204                           ;GuardianTheme.c: 44:         {;GuardianTheme.c: 45:             toggleSound(&track1, 0,
      +                           TMR0);
   205      010  0070               	clrf	toggleSound@pinNumber
   206      011  0201               	movf	1,w	;volatile
   207      012  0031               	movwf	toggleSound@initialTMR0
   208      013  0C15               	movlw	(low (main@track1| 0))& (0+255)
   209      014  09FD               	fcall	entry__toggleSound
   210                           
   211                           ;GuardianTheme.c: 46:             toggleSound(&track2, 1, TMR0);
   212      015  0070               	clrf	toggleSound@pinNumber
   213      016  02B0               	incf	toggleSound@pinNumber,f
   214      017  0201               	movf	1,w	;volatile
   215      018  0031               	movwf	toggleSound@initialTMR0
   216      019  0C17               	movlw	(low (main@track2| 0))& (0+255)
   217      01A  09FD               	fcall	entry__toggleSound
   218      01B                     l619:
   219                           
   220                           ;GuardianTheme.c: 47:         }
   221      01B  0C01               	movlw	1
   222      01C  003C               	movwf	btemp
   223      01D  007D               	clrf	btemp+1
   224      01E  021C               	movf	wtemp0,w
   225      01F  01F3               	addwf	main@counter,f
   226      020  0603               	skipnc
   227      021  02B4               	incf	main@counter+1,f
   228      022  021D               	movf	wtemp0+1,w
   229      023  01F4               	addwf	main@counter+1,f
   230      024                     l621:
   231      024  0C17               	movlw	23
   232      025  0094               	subwf	main@counter+1,w
   233      026  0C70               	movlw	112
   234      027  0643               	skipnz
   235      028  0093               	subwf	main@counter,w
   236      029  0703               	skipc
   237      02A  0A2C               	goto	u71
   238      02B  0A2D               	goto	u70
   239      02C                     u71:
   240      02C  0A10               	goto	l617
   241      02D                     u70:
   242      02D                     l623:
   243                           
   244                           ;GuardianTheme.c: 49:         track1.clocks = 6;
   245      02D  0C06               	movlw	6
   246      02E  0035               	movwf	main@track1
   247                           
   248                           ;GuardianTheme.c: 50:         track2.clocks = 6;
   249      02F  0C06               	movlw	6
   250      030  0037               	movwf	main@track2
   251      031                     l625:
   252                           
   253                           ;GuardianTheme.c: 51:         for (counter = 0; counter<6000; counter++)
   254      031  0073               	clrf	main@counter
   255      032  0074               	clrf	main@counter+1
   256      033                     l631:
   257                           
   258                           ;GuardianTheme.c: 52:         {;GuardianTheme.c: 53:             toggleSound(&track1, 0,
      +                           TMR0);
   259      033  0070               	clrf	toggleSound@pinNumber
   260      034  0201               	movf	1,w	;volatile
   261      035  0031               	movwf	toggleSound@initialTMR0
   262      036  0C15               	movlw	(low (main@track1| 0))& (0+255)
   263      037  09FD               	fcall	entry__toggleSound
   264                           
   265                           ;GuardianTheme.c: 54:             toggleSound(&track2, 1, TMR0);
   266      038  0070               	clrf	toggleSound@pinNumber
   267      039  02B0               	incf	toggleSound@pinNumber,f
   268      03A  0201               	movf	1,w	;volatile
   269      03B  0031               	movwf	toggleSound@initialTMR0
   270      03C  0C17               	movlw	(low (main@track2| 0))& (0+255)
   271      03D  09FD               	fcall	entry__toggleSound
   272      03E                     l633:
   273                           
   274                           ;GuardianTheme.c: 55:         }
   275      03E  0C01               	movlw	1
   276      03F  003C               	movwf	btemp
   277      040  007D               	clrf	btemp+1
   278      041  021C               	movf	wtemp0,w
   279      042  01F3               	addwf	main@counter,f
   280      043  0603               	skipnc
   281      044  02B4               	incf	main@counter+1,f
   282      045  021D               	movf	wtemp0+1,w
   283      046  01F4               	addwf	main@counter+1,f
   284      047                     l635:
   285      047  0C17               	movlw	23
   286      048  0094               	subwf	main@counter+1,w
   287      049  0C70               	movlw	112
   288      04A  0643               	skipnz
   289      04B  0093               	subwf	main@counter,w
   290      04C  0703               	skipc
   291      04D  0A4F               	goto	u81
   292      04E  0A50               	goto	u80
   293      04F                     u81:
   294      04F  0A33               	goto	l631
   295      050                     u80:
   296      050  0A0A               	goto	l607
   297      051  0A00               	ljmp	start
   298      052                     __end_of_main:
   299                           
   300                           	psect	text1
   301      052                     __ptext1:	
   302 ;; *************** function _toggleSound *****************
   303 ;; Defined at:
   304 ;;		line 24 in file "./MusicPlayer.h"
   305 ;; Parameters:    Size  Location     Type
   306 ;;  track           1    wreg     PTR struct Track
   307 ;;		 -> main@track2(2), main@track1(2), 
   308 ;;  pinNumber       1    0[BANK0 ] unsigned char 
   309 ;;  initialTMR0     1    1[BANK0 ] unsigned char 
   310 ;; Auto vars:     Size  Location     Type
   311 ;;  track           1    2[BANK0 ] PTR struct Track
   312 ;;		 -> main@track2(2), main@track1(2), 
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    0[BANK0 ] void 
   315 ;; Registers used:
   316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+2, btemp+3
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMMON   BANK0
   322 ;;      Params:         0       2
   323 ;;      Locals:         0       1
   324 ;;      Temps:          0       0
   325 ;;      Totals:         0       3
   326 ;;Total ram usage:        3 bytes
   327 ;; Hardware stack levels used: 1
   328 ;; This function calls:
   329 ;;		Nothing
   330 ;; This function is called by:
   331 ;;		_main
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335      052                     _toggleSound:	
   336                           ;psect for function _toggleSound
   337                           
   338                           
   339                           ;toggleSound@track stored from wreg
   340      052  0032               	movwf	toggleSound@track
   341      053                     l589:
   342                           
   343                           ;./MusicPlayer.h: 24: void toggleSound(struct Track* track, unsigned char pinNumber, uns
      +                          igned char initialTMR0);./MusicPlayer.h: 25: {;./MusicPlayer.h: 26:     if (initialTMR0 
      +                          == (unsigned char)((*track).lastTimeUpdate+((*track).clocks)))
   344      053  0211               	movf	toggleSound@initialTMR0,w
   345      054  003F               	movwf	btemp+3
   346      055  0212               	movf	toggleSound@track,w
   347      056  0024               	movwf	4
   348      057  0200               	movf	0,w
   349      058  003E               	movwf	btemp+2
   350      059  0212               	movf	toggleSound@track,w
   351      05A  003C               	movwf	btemp
   352      05B  0C01               	movlw	1
   353      05C  01DC               	addwf	btemp,w
   354      05D  0024               	movwf	4
   355      05E  0200               	movf	0,w
   356      05F  01DE               	addwf	btemp+2,w
   357      060  019F               	xorwf	btemp+3,w
   358      061  0743               	skipz
   359      062  0A64               	goto	u51
   360      063  0A65               	goto	u50
   361      064                     u51:
   362      064  0A7D               	goto	l15
   363      065                     u50:
   364      065                     l591:
   365                           
   366                           ;./MusicPlayer.h: 27:     {;./MusicPlayer.h: 28:         GPIO ^= 1UL << pinNumber;
   367      065  0290               	incf	toggleSound@pinNumber,w
   368      066  003F               	movwf	btemp+3
   369      067  0C01               	movlw	1
   370      068  003E               	movwf	btemp+2
   371      069  0A6C               	goto	u64
   372      06A                     u65:
   373      06A  0403               	clrc
   374      06B  037E               	rlf	btemp+2,f
   375      06C                     u64:
   376      06C  02FF               	decfsz	btemp+3,f
   377      06D  0A6A               	goto	u65
   378      06E  021E               	movf	btemp+2,w
   379      06F  003F               	movwf	btemp+3
   380      070  021F               	movf	btemp+3,w
   381      071  01A6               	xorwf	6,f	;volatile
   382      072                     l593:
   383                           
   384                           ;./MusicPlayer.h: 29:         TMR0 = initialTMR0;
   385      072  0211               	movf	toggleSound@initialTMR0,w
   386      073  0021               	movwf	1	;volatile
   387      074                     l595:
   388                           
   389                           ;./MusicPlayer.h: 30:         (*track).lastTimeUpdate = initialTMR0;
   390      074  0211               	movf	toggleSound@initialTMR0,w
   391      075  003F               	movwf	btemp+3
   392      076  0212               	movf	toggleSound@track,w
   393      077  003C               	movwf	btemp
   394      078  0C01               	movlw	1
   395      079  01DC               	addwf	btemp,w
   396      07A  0024               	movwf	4
   397      07B  021F               	movf	btemp+3,w
   398      07C  0020               	movwf	0
   399      07D                     l15:
   400      07D  0800               	retlw	0
   401      07E                     __end_of_toggleSound:
   402                           
   403                           	psect	jmp_tab
   404      0FD                     __pjmp_tab:	
   405                           ;incstack = 0
   406                           ; Regs used in _toggleSound: [wreg-fsr0h+status,2-btemp+0+btemp+2+btemp+3]
   407                           
   408      0FD                     entry__toggleSound:
   409      0FD  0A52               	ljmp	_toggleSound
   410      0FE                     entry__initialize:	
   411                           ;incstack = 0
   412                           ; Regs used in _initialize: [wreg]
   413                           
   414      0FE  0A7E               	ljmp	_initialize
   415                           
   416                           	psect	text2
   417      07E                     __ptext2:	
   418 ;; *************** function _initialize *****************
   419 ;; Defined at:
   420 ;;		line 11 in file "./MusicPlayer.h"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1   10[None  ] void 
   427 ;; Registers used:
   428 ;;		wreg
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0
   434 ;;      Params:         0       0
   435 ;;      Locals:         0       0
   436 ;;      Temps:          0       0
   437 ;;      Totals:         0       0
   438 ;;Total ram usage:        0 bytes
   439 ;; Hardware stack levels used: 1
   440 ;; This function calls:
   441 ;;		Nothing
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447      07E                     _initialize:	
   448                           ;psect for function _initialize
   449                           
   450      07E                     l587:
   451                           
   452                           ;./MusicPlayer.h: 13:     TRIS = 0b1000;
   453      07E  0C08               	movlw	8
   454      07F  0006               	tris	6
   455                           
   456                           ;./MusicPlayer.h: 14:     OPTION = 0b11010110;
   457      080  0CD6               	movlw	214
   458      081  0002               	option
   459      082                     l11:
   460      082  0800               	retlw	0
   461      083                     __end_of_initialize:
   462      01C                     btemp	set	28	;btemp
   463      01C                     wtemp0	set	28
   464      01E                     wtemp1	set	30
   465      01C                     ttemp0	set	28
   466      01C                     ltemp0	set	28
   467                           
   468                           	psect	idloc
   469                           
   470                           ;Config register IDLOC0 @ 0x100
   471                           ;	unspecified, using default values
   472      100                     	org	256
   473      100  0FFF               	dw	4095
   474                           
   475                           ;Config register IDLOC1 @ 0x101
   476                           ;	unspecified, using default values
   477      101                     	org	257
   478      101  0FFF               	dw	4095
   479                           
   480                           ;Config register IDLOC2 @ 0x102
   481                           ;	unspecified, using default values
   482      102                     	org	258
   483      102  0FFF               	dw	4095
   484                           
   485                           ;Config register IDLOC3 @ 0x103
   486                           ;	unspecified, using default values
   487      103                     	org	259
   488      103  0FFF               	dw	4095
   489                           
   490                           	psect	config
   491                           
   492                           ;Config register CONFIG @ 0xFFF
   493                           ;	Oscillator
   494                           ;	OSC = 0x1, unprogrammed default
   495                           ;	Watchdog Timer
   496                           ;	WDTE = OFF, WDT disabled
   497                           ;	Code Protect
   498                           ;	CP = OFF, Code protection off
   499                           ;	Master Clear Enable
   500                           ;	MCLRE = ON, GP3/MCLR pin function  is MCLR
   501      FFF                     	org	4095
   502      FFF  0FFB               	dw	4091

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            14      9       9

Pointer List with Targets:

    toggleSound@track	PTR struct Track size(1) Largest target is 2
		 -> main@track2(BANK0[2]), main@track1(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_toggleSound

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1004
                                              3 BANK0      6     6      0
                         _initialize
                        _toggleSound
 ---------------------------------------------------------------------------------
 (1) _toggleSound                                          3     1      2     762
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
   _toggleSound

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0                E      9       9       3       64.3%
ABS                  0      0       0       4        0.0%
DATA                 0      0       0       5        0.0%
BITBANK0             E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 05 19:51:34 2023

                     l11 0082                       l15 007D                       u50 0065  
                     u51 0064                       u70 002D                       u71 002C  
                     u64 006C                       u80 0050                       u65 006A  
                     u81 004F                       fsr 0004                      l601 0006  
                    l611 000E                      l603 0008                      l621 0024  
                    l605 0009                      l631 0033                      l623 002D  
                    l607 000A                      l633 003E                      l625 0031  
                    l617 0010                      l609 000C                      l635 0047  
                    l619 001B                      l591 0065                      l593 0072  
                    l587 007E                      l595 0074                      l589 0053  
                    l597 0003                      l599 0004                      fsr0 0004  
                    indf 0000                     _GPIO 0006              main@counter 0013  
                   _TMR0 0001                     _TRIS 0006                     _main 0003  
                   btemp 001C                     start 0000                    ?_main 0010  
                  ltemp0 001C                    ttemp0 001C                    wtemp0 001C  
                  wtemp1 001E   toggleSound@initialTMR0 0011          __initialization 0001  
           __end_of_main 0052                   ??_main 0000                   _OPTION 0000  
__end_of__initialization 0001             ?_toggleSound 0010           __pcstackCOMMON 0000  
   toggleSound@pinNumber 0010               __pmaintext 0003               _initialize 007E  
                __ptext1 0052                  __ptext2 007E     end_of_initialization 0001  
             main@track1 0015               main@track2 0017        entry__toggleSound 00FD  
            ?_initialize 0010      start_initialization 0001                ___latbits 0000  
          __pcstackBANK0 0010         toggleSound@track 0012                __pjmp_tab 00FD  
       entry__initialize 00FE            ??_toggleSound 0000             ??_initialize 0000  
     __end_of_initialize 0083      __end_of_toggleSound 007E              _toggleSound 0052  
