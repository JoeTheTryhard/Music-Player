

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Jan 01 18:17:09 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	10F200
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	jmp_tab,global,class=ENTRY,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x1C,4
    15      000                     
    16                           ; Version 2.40
    17                           ; Generated 06/12/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC10F200 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51      000                     	;# 
    52      001                     	;# 
    53      002                     	;# 
    54      003                     	;# 
    55      004                     	;# 
    56      005                     	;# 
    57      006                     	;# 
    58      001                     _TMR0	set	1
    59      006                     _GPIO	set	6
    60      000                     _OPTION	set	0
    61      006                     _TRIS	set	6
    62                           
    63                           	psect	cinit
    64      001                     start_initialization:	
    65                           ; #config settings
    66                           
    67      001                     __initialization:
    68                           
    69                           ; Clear objects allocated to BANK0
    70      001  0078               	clrf	__pbssBANK0& (0+31)
    71      002  0079               	clrf	(__pbssBANK0+1)& (0+31)
    72      003  007A               	clrf	(__pbssBANK0+2)& (0+31)
    73      004  007B               	clrf	(__pbssBANK0+3)& (0+31)
    74      005                     end_of_initialization:	
    75                           ;End of C runtime variable initialization code
    76                           
    77      005                     __end_of__initialization:
    78      005  0064               	clrf	4
    79      006  0A07               	ljmp	_main	;jump to C main() function
    80                           
    81                           	psect	bssBANK0
    82      018                     __pbssBANK0:
    83      018                     main@F157:
    84      018                     	ds	2
    85      01A                     main@F155:
    86      01A                     	ds	2
    87                           
    88                           	psect	cstackCOMMON
    89      000                     __pcstackCOMMON:
    90      000                     ??_initialize:
    91      000                     ??_toggleSound:	
    92                           ; 1 bytes @ 0x0
    93                           
    94      000                     ??_main:	
    95                           ; 1 bytes @ 0x0
    96                           
    97                           
    98                           	psect	cstackBANK0
    99      010                     __pcstackBANK0:	
   100                           ; 1 bytes @ 0x0
   101                           
   102      010                     ?_initialize:
   103      010                     ?_toggleSound:	
   104                           ; 1 bytes @ 0x0
   105                           
   106      010                     ?_main:	
   107                           ; 1 bytes @ 0x0
   108                           
   109      010                     toggleSound@pinNumber:	
   110                           ; 1 bytes @ 0x0
   111                           
   112                           
   113                           ; 1 bytes @ 0x0
   114      010                     	ds	1
   115      011                     toggleSound@initialTMR0:
   116                           
   117                           ; 1 bytes @ 0x1
   118      011                     	ds	1
   119      012                     toggleSound@track:
   120                           
   121                           ; 1 bytes @ 0x2
   122      012                     	ds	1
   123      013                     main@track2:
   124                           
   125                           ; 2 bytes @ 0x3
   126      013                     	ds	2
   127      015                     main@counter:
   128                           
   129                           ; 1 bytes @ 0x5
   130      015                     	ds	1
   131      016                     main@track1:
   132                           
   133                           ; 2 bytes @ 0x6
   134      016                     	ds	2
   135                           
   136                           	psect	maintext
   137      007                     __pmaintext:	
   138 ;;
   139 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   140 ;;
   141 ;; *************** function _main *****************
   142 ;; Defined at:
   143 ;;		line 29 in file "GuardianTheme.c"
   144 ;; Parameters:    Size  Location     Type
   145 ;;		None
   146 ;; Auto vars:     Size  Location     Type
   147 ;;  track1          2    6[BANK0 ] struct Track
   148 ;;  track2          2    3[BANK0 ] struct Track
   149 ;;  counter         1    5[BANK0 ] unsigned char 
   150 ;; Return value:  Size  Location     Type
   151 ;;                  1   19[None  ] void 
   152 ;; Registers used:
   153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+2, btemp+3, pclath, cstack
   154 ;; Tracked objects:
   155 ;;		On entry : B00/0
   156 ;;		On exit  : 0/0
   157 ;;		Unchanged: 0/0
   158 ;; Data sizes:     COMMON   BANK0
   159 ;;      Params:         0       0
   160 ;;      Locals:         0       5
   161 ;;      Temps:          0       0
   162 ;;      Totals:         0       5
   163 ;;Total ram usage:        5 bytes
   164 ;; Hardware stack levels required when called: 1
   165 ;; This function calls:
   166 ;;		_initialize
   167 ;;		_toggleSound
   168 ;; This function is called by:
   169 ;;		Startup code after reset
   170 ;; This function uses a non-reentrant model
   171 ;;
   172                           
   173      007                     _main:	
   174                           ;psect for function _main
   175                           
   176      007                     l649:	
   177                           ;incstack = 0
   178                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+0+btemp+2+btemp+3+pclath+cstack]
   179                           
   180                           
   181                           ;GuardianTheme.c: 31:     initialize();
   182      007  09FE               	fcall	entry__initialize
   183      008                     l651:
   184                           
   185                           ;GuardianTheme.c: 32:     struct Track track1 = {0, TMR0};
   186      008  021B               	movf	main@F155+1,w
   187      009  0037               	movwf	main@track1+1
   188      00A  021A               	movf	main@F155,w
   189      00B  0036               	movwf	main@track1
   190      00C                     l653:
   191      00C  0076               	clrf	main@track1
   192      00D                     l655:
   193      00D  0201               	movf	1,w	;volatile
   194      00E  0037               	movwf	main@track1+1
   195      00F                     l657:
   196      00F                     l659:
   197      00F  0073               	clrf	main@track2
   198      010                     l661:
   199      010  0201               	movf	1,w	;volatile
   200      011  0034               	movwf	main@track2+1
   201      012                     l663:
   202                           
   203                           ;GuardianTheme.c: 36:     {;GuardianTheme.c: 37:         for (counter = 0; counter < 254
      +                          ; counter++)
   204      012  0075               	clrf	main@counter
   205      013                     l669:
   206                           
   207                           ;GuardianTheme.c: 38:         {;GuardianTheme.c: 39:             toggleSound(&track1, 0,
      +                           TMR0);
   208      013  0070               	clrf	toggleSound@pinNumber
   209      014  0201               	movf	1,w	;volatile
   210      015  0031               	movwf	toggleSound@initialTMR0
   211      016  0C16               	movlw	(low (main@track1| 0))& (0+255)
   212      017  09FD               	fcall	entry__toggleSound
   213                           
   214                           ;GuardianTheme.c: 40:             toggleSound(&track1, 1, TMR0);
   215      018  0070               	clrf	toggleSound@pinNumber
   216      019  02B0               	incf	toggleSound@pinNumber,f
   217      01A  0201               	movf	1,w	;volatile
   218      01B  0031               	movwf	toggleSound@initialTMR0
   219      01C  0C16               	movlw	(low (main@track1| 0))& (0+255)
   220      01D  09FD               	fcall	entry__toggleSound
   221      01E                     l671:
   222                           
   223                           ;GuardianTheme.c: 41:         }
   224      01E  0C01               	movlw	1
   225      01F  003F               	movwf	btemp+3
   226      020  021F               	movf	btemp+3,w
   227      021  01F5               	addwf	main@counter,f
   228      022                     l673:
   229      022  0CFE               	movlw	254
   230      023  0095               	subwf	main@counter,w
   231      024  0703               	skipc
   232      025  0A27               	goto	u121
   233      026  0A28               	goto	u120
   234      027                     u121:
   235      027  0A13               	goto	l669
   236      028                     u120:
   237      028                     l675:
   238                           
   239                           ;GuardianTheme.c: 43:         track1.clocks = 20;
   240      028  0C14               	movlw	20
   241      029  0036               	movwf	main@track1
   242                           
   243                           ;GuardianTheme.c: 44:         track2.clocks = 30;
   244      02A  0C1E               	movlw	30
   245      02B  0033               	movwf	main@track2
   246      02C                     l677:
   247                           
   248                           ;GuardianTheme.c: 46:         for (counter = 0; counter < 254; counter++)
   249      02C  0075               	clrf	main@counter
   250      02D                     l683:
   251                           
   252                           ;GuardianTheme.c: 47:         {;GuardianTheme.c: 48:             toggleSound(&track1, 0,
      +                           TMR0);
   253      02D  0070               	clrf	toggleSound@pinNumber
   254      02E  0201               	movf	1,w	;volatile
   255      02F  0031               	movwf	toggleSound@initialTMR0
   256      030  0C16               	movlw	(low (main@track1| 0))& (0+255)
   257      031  09FD               	fcall	entry__toggleSound
   258                           
   259                           ;GuardianTheme.c: 49:             toggleSound(&track1, 1, TMR0);
   260      032  0070               	clrf	toggleSound@pinNumber
   261      033  02B0               	incf	toggleSound@pinNumber,f
   262      034  0201               	movf	1,w	;volatile
   263      035  0031               	movwf	toggleSound@initialTMR0
   264      036  0C16               	movlw	(low (main@track1| 0))& (0+255)
   265      037  09FD               	fcall	entry__toggleSound
   266      038                     l685:
   267                           
   268                           ;GuardianTheme.c: 50:         }
   269      038  0C01               	movlw	1
   270      039  003F               	movwf	btemp+3
   271      03A  021F               	movf	btemp+3,w
   272      03B  01F5               	addwf	main@counter,f
   273      03C                     l687:
   274      03C  0CFE               	movlw	254
   275      03D  0095               	subwf	main@counter,w
   276      03E  0703               	skipc
   277      03F  0A41               	goto	u131
   278      040  0A42               	goto	u130
   279      041                     u131:
   280      041  0A2D               	goto	l683
   281      042                     u130:
   282      042                     l689:
   283                           
   284                           ;GuardianTheme.c: 51:         for (counter = 0; counter < 254; counter++)
   285      042  0075               	clrf	main@counter
   286      043                     l695:
   287                           
   288                           ;GuardianTheme.c: 52:         {;GuardianTheme.c: 53:             toggleSound(&track1, 0,
      +                           TMR0);
   289      043  0070               	clrf	toggleSound@pinNumber
   290      044  0201               	movf	1,w	;volatile
   291      045  0031               	movwf	toggleSound@initialTMR0
   292      046  0C16               	movlw	(low (main@track1| 0))& (0+255)
   293      047  09FD               	fcall	entry__toggleSound
   294                           
   295                           ;GuardianTheme.c: 54:             toggleSound(&track1, 1, TMR0);
   296      048  0070               	clrf	toggleSound@pinNumber
   297      049  02B0               	incf	toggleSound@pinNumber,f
   298      04A  0201               	movf	1,w	;volatile
   299      04B  0031               	movwf	toggleSound@initialTMR0
   300      04C  0C16               	movlw	(low (main@track1| 0))& (0+255)
   301      04D  09FD               	fcall	entry__toggleSound
   302      04E                     l697:
   303                           
   304                           ;GuardianTheme.c: 55:         }
   305      04E  0C01               	movlw	1
   306      04F  003F               	movwf	btemp+3
   307      050  021F               	movf	btemp+3,w
   308      051  01F5               	addwf	main@counter,f
   309      052                     l699:
   310      052  0CFE               	movlw	254
   311      053  0095               	subwf	main@counter,w
   312      054  0703               	skipc
   313      055  0A57               	goto	u141
   314      056  0A58               	goto	u140
   315      057                     u141:
   316      057  0A43               	goto	l695
   317      058                     u140:
   318      058                     l701:
   319                           
   320                           ;GuardianTheme.c: 56:         for (counter = 0; counter < 254; counter++)
   321      058  0075               	clrf	main@counter
   322      059                     l707:
   323                           
   324                           ;GuardianTheme.c: 57:         {;GuardianTheme.c: 58:             toggleSound(&track1, 0,
      +                           TMR0);
   325      059  0070               	clrf	toggleSound@pinNumber
   326      05A  0201               	movf	1,w	;volatile
   327      05B  0031               	movwf	toggleSound@initialTMR0
   328      05C  0C16               	movlw	(low (main@track1| 0))& (0+255)
   329      05D  09FD               	fcall	entry__toggleSound
   330                           
   331                           ;GuardianTheme.c: 59:             toggleSound(&track1, 1, TMR0);
   332      05E  0070               	clrf	toggleSound@pinNumber
   333      05F  02B0               	incf	toggleSound@pinNumber,f
   334      060  0201               	movf	1,w	;volatile
   335      061  0031               	movwf	toggleSound@initialTMR0
   336      062  0C16               	movlw	(low (main@track1| 0))& (0+255)
   337      063  09FD               	fcall	entry__toggleSound
   338      064                     l709:
   339                           
   340                           ;GuardianTheme.c: 60:         }
   341      064  0C01               	movlw	1
   342      065  003F               	movwf	btemp+3
   343      066  021F               	movf	btemp+3,w
   344      067  01F5               	addwf	main@counter,f
   345      068                     l711:
   346      068  0CFE               	movlw	254
   347      069  0095               	subwf	main@counter,w
   348      06A  0703               	skipc
   349      06B  0A6D               	goto	u151
   350      06C  0A6E               	goto	u150
   351      06D                     u151:
   352      06D  0A59               	goto	l707
   353      06E                     u150:
   354      06E                     l713:
   355                           
   356                           ;GuardianTheme.c: 61:         for (counter = 0; counter < 254; counter++)
   357      06E  0075               	clrf	main@counter
   358      06F                     l719:
   359                           
   360                           ;GuardianTheme.c: 62:         {;GuardianTheme.c: 63:             toggleSound(&track1, 0,
      +                           TMR0);
   361      06F  0070               	clrf	toggleSound@pinNumber
   362      070  0201               	movf	1,w	;volatile
   363      071  0031               	movwf	toggleSound@initialTMR0
   364      072  0C16               	movlw	(low (main@track1| 0))& (0+255)
   365      073  09FD               	fcall	entry__toggleSound
   366                           
   367                           ;GuardianTheme.c: 64:             toggleSound(&track1, 1, TMR0);
   368      074  0070               	clrf	toggleSound@pinNumber
   369      075  02B0               	incf	toggleSound@pinNumber,f
   370      076  0201               	movf	1,w	;volatile
   371      077  0031               	movwf	toggleSound@initialTMR0
   372      078  0C16               	movlw	(low (main@track1| 0))& (0+255)
   373      079  09FD               	fcall	entry__toggleSound
   374      07A                     l721:
   375                           
   376                           ;GuardianTheme.c: 65:         }
   377      07A  0C01               	movlw	1
   378      07B  003F               	movwf	btemp+3
   379      07C  021F               	movf	btemp+3,w
   380      07D  01F5               	addwf	main@counter,f
   381      07E                     l723:
   382      07E  0CFE               	movlw	254
   383      07F  0095               	subwf	main@counter,w
   384      080  0703               	skipc
   385      081  0A83               	goto	u161
   386      082  0A84               	goto	u160
   387      083                     u161:
   388      083  0A6F               	goto	l719
   389      084                     u160:
   390      084                     l725:
   391                           
   392                           ;GuardianTheme.c: 68:         track1.clocks = 0;
   393      084  0076               	clrf	main@track1
   394                           
   395                           ;GuardianTheme.c: 69:         track2.clocks = 0;
   396      085  0073               	clrf	main@track2
   397      086  0A12               	goto	l663
   398      087  0A00               	ljmp	start
   399      088                     __end_of_main:
   400                           
   401                           	psect	text1
   402      088                     __ptext1:	
   403 ;; *************** function _toggleSound *****************
   404 ;; Defined at:
   405 ;;		line 24 in file "./MusicPlayer.h"
   406 ;; Parameters:    Size  Location     Type
   407 ;;  track           1    wreg     PTR struct Track
   408 ;;		 -> main@track1(2), 
   409 ;;  pinNumber       1    0[BANK0 ] unsigned char 
   410 ;;  initialTMR0     1    1[BANK0 ] unsigned char 
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  track           1    2[BANK0 ] PTR struct Track
   413 ;;		 -> main@track1(2), 
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    0[BANK0 ] void 
   416 ;; Registers used:
   417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+2, btemp+3
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMMON   BANK0
   423 ;;      Params:         0       2
   424 ;;      Locals:         0       1
   425 ;;      Temps:          0       0
   426 ;;      Totals:         0       3
   427 ;;Total ram usage:        3 bytes
   428 ;; Hardware stack levels used: 1
   429 ;; This function calls:
   430 ;;		Nothing
   431 ;; This function is called by:
   432 ;;		_main
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436      088                     _toggleSound:	
   437                           ;psect for function _toggleSound
   438                           
   439                           
   440                           ;toggleSound@track stored from wreg
   441      088  0032               	movwf	toggleSound@track
   442      089                     l639:
   443                           
   444                           ;./MusicPlayer.h: 24: void toggleSound(struct Track* track, unsigned char pinNumber, uns
      +                          igned char initialTMR0);./MusicPlayer.h: 25: {;./MusicPlayer.h: 26:     if (initialTMR0 
      +                          == (unsigned char)((*track).lastTimeUpdate+((*track).clocks)) && (*track).clocks !=0)
   445      089  0211               	movf	toggleSound@initialTMR0,w
   446      08A  003F               	movwf	btemp+3
   447      08B  0212               	movf	toggleSound@track,w
   448      08C  0024               	movwf	4
   449      08D  0200               	movf	0,w
   450      08E  003E               	movwf	btemp+2
   451      08F  0212               	movf	toggleSound@track,w
   452      090  003C               	movwf	btemp
   453      091  0C01               	movlw	1
   454      092  01DC               	addwf	btemp,w
   455      093  0024               	movwf	4
   456      094  0200               	movf	0,w
   457      095  01DE               	addwf	btemp+2,w
   458      096  019F               	xorwf	btemp+3,w
   459      097  0743               	skipz
   460      098  0A9A               	goto	u91
   461      099  0A9B               	goto	u90
   462      09A                     u91:
   463      09A  0ABA               	goto	l15
   464      09B                     u90:
   465      09B                     l641:
   466      09B  0212               	movf	toggleSound@track,w
   467      09C  0024               	movwf	4
   468      09D  0200               	movf	0,w
   469      09E  0643               	btfsc	3,2
   470      09F  0AA1               	goto	u101
   471      0A0  0AA2               	goto	u100
   472      0A1                     u101:
   473      0A1  0ABA               	goto	l15
   474      0A2                     u100:
   475      0A2                     l643:
   476                           
   477                           ;./MusicPlayer.h: 27:     {;./MusicPlayer.h: 28:         GPIO ^= 1UL << pinNumber;
   478      0A2  0290               	incf	toggleSound@pinNumber,w
   479      0A3  003F               	movwf	btemp+3
   480      0A4  0C01               	movlw	1
   481      0A5  003E               	movwf	btemp+2
   482      0A6  0AA9               	goto	u114
   483      0A7                     u115:
   484      0A7  0403               	clrc
   485      0A8  037E               	rlf	btemp+2,f
   486      0A9                     u114:
   487      0A9  02FF               	decfsz	btemp+3,f
   488      0AA  0AA7               	goto	u115
   489      0AB  021E               	movf	btemp+2,w
   490      0AC  003F               	movwf	btemp+3
   491      0AD  021F               	movf	btemp+3,w
   492      0AE  01A6               	xorwf	6,f	;volatile
   493      0AF                     l645:
   494                           
   495                           ;./MusicPlayer.h: 29:         TMR0 = initialTMR0;
   496      0AF  0211               	movf	toggleSound@initialTMR0,w
   497      0B0  0021               	movwf	1	;volatile
   498      0B1                     l647:
   499                           
   500                           ;./MusicPlayer.h: 30:         (*track).lastTimeUpdate = initialTMR0;
   501      0B1  0211               	movf	toggleSound@initialTMR0,w
   502      0B2  003F               	movwf	btemp+3
   503      0B3  0212               	movf	toggleSound@track,w
   504      0B4  003C               	movwf	btemp
   505      0B5  0C01               	movlw	1
   506      0B6  01DC               	addwf	btemp,w
   507      0B7  0024               	movwf	4
   508      0B8  021F               	movf	btemp+3,w
   509      0B9  0020               	movwf	0
   510      0BA                     l15:
   511      0BA  0800               	retlw	0
   512      0BB                     __end_of_toggleSound:
   513                           
   514                           	psect	jmp_tab
   515      0FD                     __pjmp_tab:	
   516                           ;incstack = 0
   517                           ; Regs used in _toggleSound: [wreg-fsr0h+status,2-btemp+0+btemp+2+btemp+3]
   518                           
   519      0FD                     entry__toggleSound:
   520      0FD  0A88               	ljmp	_toggleSound
   521      0FE                     entry__initialize:	
   522                           ;incstack = 0
   523                           ; Regs used in _initialize: [wreg]
   524                           
   525      0FE  0ABB               	ljmp	_initialize
   526                           
   527                           	psect	text2
   528      0BB                     __ptext2:	
   529 ;; *************** function _initialize *****************
   530 ;; Defined at:
   531 ;;		line 11 in file "./MusicPlayer.h"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1   10[None  ] void 
   538 ;; Registers used:
   539 ;;		wreg
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMMON   BANK0
   545 ;;      Params:         0       0
   546 ;;      Locals:         0       0
   547 ;;      Temps:          0       0
   548 ;;      Totals:         0       0
   549 ;;Total ram usage:        0 bytes
   550 ;; Hardware stack levels used: 1
   551 ;; This function calls:
   552 ;;		Nothing
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558      0BB                     _initialize:	
   559                           ;psect for function _initialize
   560                           
   561      0BB                     l637:
   562                           
   563                           ;./MusicPlayer.h: 13:     TRIS = 0b1000;
   564      0BB  0C08               	movlw	8
   565      0BC  0006               	tris	6
   566                           
   567                           ;./MusicPlayer.h: 14:     OPTION = 0b11010100;
   568      0BD  0CD4               	movlw	212
   569      0BE  0002               	option
   570      0BF                     l11:
   571      0BF  0800               	retlw	0
   572      0C0                     __end_of_initialize:
   573      01C                     btemp	set	28	;btemp
   574      01C                     wtemp0	set	28
   575      01E                     wtemp1	set	30
   576      01C                     ttemp0	set	28
   577      01C                     ltemp0	set	28
   578                           
   579                           	psect	idloc
   580                           
   581                           ;Config register IDLOC0 @ 0x100
   582                           ;	unspecified, using default values
   583      100                     	org	256
   584      100  0FFF               	dw	4095
   585                           
   586                           ;Config register IDLOC1 @ 0x101
   587                           ;	unspecified, using default values
   588      101                     	org	257
   589      101  0FFF               	dw	4095
   590                           
   591                           ;Config register IDLOC2 @ 0x102
   592                           ;	unspecified, using default values
   593      102                     	org	258
   594      102  0FFF               	dw	4095
   595                           
   596                           ;Config register IDLOC3 @ 0x103
   597                           ;	unspecified, using default values
   598      103                     	org	259
   599      103  0FFF               	dw	4095
   600                           
   601                           	psect	config
   602                           
   603                           ;Config register CONFIG @ 0xFFF
   604                           ;	Oscillator
   605                           ;	OSC = 0x1, unprogrammed default
   606                           ;	Watchdog Timer
   607                           ;	WDTE = OFF, WDT disabled
   608                           ;	Code Protect
   609                           ;	CP = OFF, Code protection off
   610                           ;	Master Clear Enable
   611                           ;	MCLRE = ON, GP3/MCLR pin function  is MCLR
   612      FFF                     	org	4095
   613      FFF  0FFB               	dw	4091

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            14      8      12

Pointer List with Targets:

    toggleSound@track	PTR struct Track size(1) Largest target is 2
		 -> main@track1(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_toggleSound

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2207
                                              3 BANK0      5     5      0
                         _initialize
                        _toggleSound
 ---------------------------------------------------------------------------------
 (1) _toggleSound                                          3     1      2    1696
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
   _toggleSound

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0                E      8       C       3       85.7%
ABS                  0      0       C       4        0.0%
DATA                 0      0       C       5        0.0%
BITBANK0             E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Jan 01 18:17:09 2023

                     l11 00BF                       l15 00BA                       u90 009B  
                     u91 009A                       fsr 0004                      l701 0058  
                    l711 0068                      l641 009B                      l721 007A  
                    l713 006E                      l643 00A2                      l723 007E  
                    l707 0059                      l651 0008                      l637 00BB  
                    l645 00AF                      l725 0084                      l709 0064  
                    l661 0010                      l653 000C                      l647 00B1  
                    l639 0089                      l719 006F                      l671 001E  
                    l663 0012                      l655 000D                      l673 0022  
                    l657 000F                      l649 0007                      l683 002D  
                    l675 0028                      l659 000F                      l685 0038  
                    l677 002C                      l669 0013                      l695 0043  
                    l687 003C                      l697 004E                      l689 0042  
                    l699 0052                      u100 00A2                      u101 00A1  
                    u120 0028                      u121 0027                      u114 00A9  
                    u130 0042                      u115 00A7                      u131 0041  
                    u140 0058                      u141 0057                      u150 006E  
                    u151 006D                      u160 0084                      u161 0083  
                    fsr0 0004                      indf 0000                     _GPIO 0006  
            main@counter 0015                     _TMR0 0001                     _TRIS 0006  
                   _main 0007                     btemp 001C                     start 0000  
                  ?_main 0010                    ltemp0 001C                    ttemp0 001C  
                  status 0003                    wtemp0 001C                    wtemp1 001E  
 toggleSound@initialTMR0 0011          __initialization 0001             __end_of_main 0088  
                 ??_main 0000                   _OPTION 0000  __end_of__initialization 0005  
           ?_toggleSound 0010           __pcstackCOMMON 0000     toggleSound@pinNumber 0010  
             __pbssBANK0 0018               __pmaintext 0007               _initialize 00BB  
                __ptext1 0088                  __ptext2 00BB     end_of_initialization 0005  
             main@track1 0016               main@track2 0013        entry__toggleSound 00FD  
            ?_initialize 0010      start_initialization 0001                ___latbits 0000  
          __pcstackBANK0 0010         toggleSound@track 0012                __pjmp_tab 00FD  
       entry__initialize 00FE            ??_toggleSound 0000             ??_initialize 0000  
     __end_of_initialize 00C0                 main@F155 001A                 main@F157 0018  
    __end_of_toggleSound 00BB              _toggleSound 0088  
