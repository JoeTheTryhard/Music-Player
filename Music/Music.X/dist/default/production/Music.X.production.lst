

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jan 06 12:40:39 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	10F200
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	jmp_tab,global,class=ENTRY,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x1C,4
    15      000                     
    16                           ; Version 2.40
    17                           ; Generated 06/12/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC10F200 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51      000                     	;# 
    52      001                     	;# 
    53      002                     	;# 
    54      003                     	;# 
    55      004                     	;# 
    56      005                     	;# 
    57      006                     	;# 
    58      001                     _TMR0	set	1
    59      006                     _GPIO	set	6
    60      000                     _OPTION	set	0
    61      006                     _TRIS	set	6
    62                           
    63                           	psect	cinit
    64      001                     start_initialization:	
    65                           ; #config settings
    66                           
    67      001                     __initialization:
    68      001                     end_of_initialization:	
    69                           ;End of C runtime variable initialization code
    70                           
    71      001                     __end_of__initialization:
    72      001  0064               	clrf	4
    73      002  0A57               	ljmp	_main	;jump to C main() function
    74                           
    75                           	psect	cstackCOMMON
    76      000                     __pcstackCOMMON:
    77      000                     ??_initialize:
    78      000                     ??_toggleSound:	
    79                           ; 1 bytes @ 0x0
    80                           
    81      000                     ??_playSound:	
    82                           ; 1 bytes @ 0x0
    83                           
    84      000                     ??_main:	
    85                           ; 1 bytes @ 0x0
    86                           
    87                           
    88                           	psect	cstackBANK0
    89      010                     __pcstackBANK0:	
    90                           ; 1 bytes @ 0x0
    91                           
    92      010                     ?_initialize:
    93      010                     ?_toggleSound:	
    94                           ; 1 bytes @ 0x0
    95                           
    96      010                     ?_main:	
    97                           ; 1 bytes @ 0x0
    98                           
    99      010                     toggleSound@pinNumber:	
   100                           ; 1 bytes @ 0x0
   101                           
   102                           
   103                           ; 1 bytes @ 0x0
   104      010                     	ds	1
   105      011                     toggleSound@initialTMR0:
   106                           
   107                           ; 1 bytes @ 0x1
   108      011                     	ds	1
   109      012                     toggleSound@track:
   110                           
   111                           ; 1 bytes @ 0x2
   112      012                     	ds	1
   113      013                     ?_playSound:
   114      013                     playSound@track2:	
   115                           ; 1 bytes @ 0x3
   116                           
   117                           
   118                           ; 1 bytes @ 0x3
   119      013                     	ds	1
   120      014                     playSound@track1:
   121                           
   122                           ; 1 bytes @ 0x4
   123      014                     	ds	1
   124      015                     playSound@counter:
   125                           
   126                           ; 2 bytes @ 0x5
   127      015                     	ds	2
   128      017                     main@track1:
   129                           
   130                           ; 2 bytes @ 0x7
   131      017                     	ds	2
   132      019                     main@track2:
   133                           
   134                           ; 2 bytes @ 0x9
   135      019                     	ds	2
   136                           
   137                           	psect	maintext
   138      057                     __pmaintext:	
   139 ;;
   140 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   141 ;;
   142 ;; *************** function _main *****************
   143 ;; Defined at:
   144 ;;		line 29 in file "GuardianTheme.c"
   145 ;; Parameters:    Size  Location     Type
   146 ;;		None
   147 ;; Auto vars:     Size  Location     Type
   148 ;;  track2          2    9[BANK0 ] struct Track
   149 ;;  track1          2    7[BANK0 ] struct Track
   150 ;; Return value:  Size  Location     Type
   151 ;;                  1   24[None  ] void 
   152 ;; Registers used:
   153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, pclath, cstack
   154 ;; Tracked objects:
   155 ;;		On entry : B00/0
   156 ;;		On exit  : 0/0
   157 ;;		Unchanged: 0/0
   158 ;; Data sizes:     COMMON   BANK0
   159 ;;      Params:         0       0
   160 ;;      Locals:         0       4
   161 ;;      Temps:          0       0
   162 ;;      Totals:         0       4
   163 ;;Total ram usage:        4 bytes
   164 ;; Hardware stack levels required when called: 2
   165 ;; This function calls:
   166 ;;		_initialize
   167 ;;		_playSound
   168 ;; This function is called by:
   169 ;;		Startup code after reset
   170 ;; This function uses a non-reentrant model
   171 ;;
   172                           
   173      057                     _main:	
   174                           ;psect for function _main
   175                           
   176      057                     l604:	
   177                           ;incstack = 0
   178                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+3+pclath+cstack]
   179                           
   180                           
   181                           ;GuardianTheme.c: 31:     initialize();
   182      057  09FE               	fcall	entry__initialize
   183      058                     l606:
   184                           
   185                           ;GuardianTheme.c: 35:     {;GuardianTheme.c: 36:         track1.clocks = 50;
   186      058  0C32               	movlw	50
   187      059  0037               	movwf	main@track1
   188      05A                     l608:
   189                           
   190                           ;GuardianTheme.c: 37:         track2.clocks = 20;
   191      05A  0C14               	movlw	20
   192      05B  0039               	movwf	main@track2
   193      05C                     l610:
   194                           
   195                           ;GuardianTheme.c: 38:         playSound(&track1, &track2);
   196      05C  0C19               	movlw	(low (main@track2| 0))& (0+255)
   197      05D  0033               	movwf	playSound@track2
   198      05E  0C17               	movlw	(low (main@track1| 0))& (0+255)
   199      05F  09FC               	fcall	entry__playSound
   200      060                     l612:
   201                           
   202                           ;GuardianTheme.c: 39:         playSound(&track1, &track2);
   203      060  0C19               	movlw	(low (main@track2| 0))& (0+255)
   204      061  0033               	movwf	playSound@track2
   205      062  0C17               	movlw	(low (main@track1| 0))& (0+255)
   206      063  09FC               	fcall	entry__playSound
   207      064                     l614:
   208                           
   209                           ;GuardianTheme.c: 40:         track1.clocks = 2;
   210      064  0C02               	movlw	2
   211      065  0037               	movwf	main@track1
   212      066                     l616:
   213                           
   214                           ;GuardianTheme.c: 41:         track2.clocks = 2;
   215      066  0C02               	movlw	2
   216      067  0039               	movwf	main@track2
   217      068                     l618:
   218                           
   219                           ;GuardianTheme.c: 42:         playSound(&track1, &track2);
   220      068  0C19               	movlw	(low (main@track2| 0))& (0+255)
   221      069  0033               	movwf	playSound@track2
   222      06A  0C17               	movlw	(low (main@track1| 0))& (0+255)
   223      06B  09FC               	fcall	entry__playSound
   224      06C                     l620:
   225                           
   226                           ;GuardianTheme.c: 43:         playSound(&track1, &track2);
   227      06C  0C19               	movlw	(low (main@track2| 0))& (0+255)
   228      06D  0033               	movwf	playSound@track2
   229      06E  0C17               	movlw	(low (main@track1| 0))& (0+255)
   230      06F  09FC               	fcall	entry__playSound
   231      070  0A58               	goto	l606
   232      071  0A00               	ljmp	start
   233      072                     __end_of_main:
   234                           
   235                           	psect	text1
   236      036                     __ptext1:	
   237 ;; *************** function _playSound *****************
   238 ;; Defined at:
   239 ;;		line 36 in file "./MusicPlayer.h"
   240 ;; Parameters:    Size  Location     Type
   241 ;;  track1          1    wreg     PTR struct Track
   242 ;;		 -> main@track1(2), 
   243 ;;  track2          1    3[BANK0 ] PTR struct Track
   244 ;;		 -> main@track2(2), 
   245 ;; Auto vars:     Size  Location     Type
   246 ;;  track1          1    4[BANK0 ] PTR struct Track
   247 ;;		 -> main@track1(2), 
   248 ;;  counter         2    5[BANK0 ] unsigned short 
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    3[BANK0 ] void 
   251 ;; Registers used:
   252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, pclath, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : 0/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMMON   BANK0
   258 ;;      Params:         0       1
   259 ;;      Locals:         0       3
   260 ;;      Temps:          0       0
   261 ;;      Totals:         0       4
   262 ;;Total ram usage:        4 bytes
   263 ;; Hardware stack levels used: 1
   264 ;; Hardware stack levels required when called: 1
   265 ;; This function calls:
   266 ;;		_toggleSound
   267 ;; This function is called by:
   268 ;;		_main
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272      036                     _playSound:	
   273                           ;psect for function _playSound
   274                           
   275                           
   276                           ;playSound@track1 stored from wreg
   277      036  0034               	movwf	playSound@track1
   278      037                     l592:
   279                           
   280                           ;./MusicPlayer.h: 36: void playSound(struct Track* track1, struct Track* track2);./Music
      +                          Player.h: 37: {;./MusicPlayer.h: 38:     for (unsigned short counter = 0; counter<6000; 
      +                          counter++)
   281      037  0075               	clrf	playSound@counter
   282      038  0076               	clrf	playSound@counter+1
   283      039                     l598:
   284                           
   285                           ;./MusicPlayer.h: 39:     {;./MusicPlayer.h: 40:         toggleSound(track1, 0, TMR0);
   286      039  0070               	clrf	toggleSound@pinNumber
   287      03A  0201               	movf	1,w	;volatile
   288      03B  0031               	movwf	toggleSound@initialTMR0
   289      03C  0214               	movf	playSound@track1,w
   290      03D  09FD               	fcall	entry__toggleSound
   291                           
   292                           ;./MusicPlayer.h: 41:         toggleSound(track2, 1, TMR0);
   293      03E  0070               	clrf	toggleSound@pinNumber
   294      03F  02B0               	incf	toggleSound@pinNumber,f
   295      040  0201               	movf	1,w	;volatile
   296      041  0031               	movwf	toggleSound@initialTMR0
   297      042  0213               	movf	playSound@track2,w
   298      043  09FD               	fcall	entry__toggleSound
   299      044                     l600:
   300                           
   301                           ;./MusicPlayer.h: 42:     }
   302      044  0C01               	movlw	1
   303      045  003C               	movwf	btemp
   304      046  007D               	clrf	btemp+1
   305      047  021C               	movf	wtemp0,w
   306      048  01F5               	addwf	playSound@counter,f
   307      049  0603               	skipnc
   308      04A  02B6               	incf	playSound@counter+1,f
   309      04B  021D               	movf	wtemp0+1,w
   310      04C  01F6               	addwf	playSound@counter+1,f
   311      04D                     l602:
   312      04D  0C17               	movlw	23
   313      04E  0096               	subwf	playSound@counter+1,w
   314      04F  0C70               	movlw	112
   315      050  0643               	skipnz
   316      051  0095               	subwf	playSound@counter,w
   317      052  0703               	skipc
   318      053  0A55               	goto	u81
   319      054  0A56               	goto	u80
   320      055                     u81:
   321      055  0A39               	goto	l598
   322      056                     u80:
   323      056                     l20:
   324      056  0800               	retlw	0
   325      057                     __end_of_playSound:
   326                           
   327                           	psect	jmp_tab
   328      0FC                     __pjmp_tab:	
   329                           ;incstack = 0
   330                           ; Regs used in _playSound: [wreg-fsr0h+status,2-btemp+3+pclath+cstack]
   331                           
   332      0FC                     entry__playSound:
   333      0FC  0A36               	ljmp	_playSound
   334      0FD                     entry__toggleSound:	
   335                           ;incstack = 0
   336                           ; Regs used in _toggleSound: [wreg-fsr0h+status,2-btemp+0+btemp+2+btemp+3]
   337                           
   338      0FD  0A03               	ljmp	_toggleSound
   339      0FE                     entry__initialize:	
   340                           ;incstack = 0
   341                           ; Regs used in _initialize: [wreg]
   342                           
   343      0FE  0A72               	ljmp	_initialize
   344                           
   345                           	psect	text2
   346      003                     __ptext2:	
   347 ;; *************** function _toggleSound *****************
   348 ;; Defined at:
   349 ;;		line 26 in file "./MusicPlayer.h"
   350 ;; Parameters:    Size  Location     Type
   351 ;;  track           1    wreg     PTR struct Track
   352 ;;		 -> main@track2(2), main@track1(2), 
   353 ;;  pinNumber       1    0[BANK0 ] unsigned char 
   354 ;;  initialTMR0     1    1[BANK0 ] unsigned char 
   355 ;; Auto vars:     Size  Location     Type
   356 ;;  track           1    2[BANK0 ] PTR struct Track
   357 ;;		 -> main@track2(2), main@track1(2), 
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    0[BANK0 ] void 
   360 ;; Registers used:
   361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+2, btemp+3
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMMON   BANK0
   367 ;;      Params:         0       2
   368 ;;      Locals:         0       1
   369 ;;      Temps:          0       0
   370 ;;      Totals:         0       3
   371 ;;Total ram usage:        3 bytes
   372 ;; Hardware stack levels used: 1
   373 ;; This function calls:
   374 ;;		Nothing
   375 ;; This function is called by:
   376 ;;		_playSound
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380      003                     _toggleSound:	
   381                           ;psect for function _toggleSound
   382                           
   383                           
   384                           ;toggleSound@track stored from wreg
   385      003  0032               	movwf	toggleSound@track
   386      004                     l580:
   387                           
   388                           ;./MusicPlayer.h: 26: void toggleSound(struct Track* track, unsigned char pinNumber, uns
      +                          igned char initialTMR0);./MusicPlayer.h: 27: {;./MusicPlayer.h: 28:     if (initialTMR0 
      +                          == (unsigned char)((*track).lastTimeUpdate+((*track).clocks)) && (*track).clocks !=0)
   389      004  0211               	movf	toggleSound@initialTMR0,w
   390      005  003F               	movwf	btemp+3
   391      006  0212               	movf	toggleSound@track,w
   392      007  0024               	movwf	4
   393      008  0200               	movf	0,w
   394      009  003E               	movwf	btemp+2
   395      00A  0212               	movf	toggleSound@track,w
   396      00B  003C               	movwf	btemp
   397      00C  0C01               	movlw	1
   398      00D  01DC               	addwf	btemp,w
   399      00E  0024               	movwf	4
   400      00F  0200               	movf	0,w
   401      010  01DE               	addwf	btemp+2,w
   402      011  019F               	xorwf	btemp+3,w
   403      012  0743               	skipz
   404      013  0A15               	goto	u51
   405      014  0A16               	goto	u50
   406      015                     u51:
   407      015  0A35               	goto	l15
   408      016                     u50:
   409      016                     l582:
   410      016  0212               	movf	toggleSound@track,w
   411      017  0024               	movwf	4
   412      018  0200               	movf	0,w
   413      019  0643               	btfsc	3,2
   414      01A  0A1C               	goto	u61
   415      01B  0A1D               	goto	u60
   416      01C                     u61:
   417      01C  0A35               	goto	l15
   418      01D                     u60:
   419      01D                     l584:
   420                           
   421                           ;./MusicPlayer.h: 29:     {;./MusicPlayer.h: 30:         GPIO ^= 1UL << pinNumber;
   422      01D  0290               	incf	toggleSound@pinNumber,w
   423      01E  003F               	movwf	btemp+3
   424      01F  0C01               	movlw	1
   425      020  003E               	movwf	btemp+2
   426      021  0A24               	goto	u74
   427      022                     u75:
   428      022  0403               	clrc
   429      023  037E               	rlf	btemp+2,f
   430      024                     u74:
   431      024  02FF               	decfsz	btemp+3,f
   432      025  0A22               	goto	u75
   433      026  021E               	movf	btemp+2,w
   434      027  003F               	movwf	btemp+3
   435      028  021F               	movf	btemp+3,w
   436      029  01A6               	xorwf	6,f	;volatile
   437      02A                     l586:
   438                           
   439                           ;./MusicPlayer.h: 31:         TMR0 = initialTMR0;
   440      02A  0211               	movf	toggleSound@initialTMR0,w
   441      02B  0021               	movwf	1	;volatile
   442      02C                     l588:
   443                           
   444                           ;./MusicPlayer.h: 32:         (*track).lastTimeUpdate = initialTMR0;
   445      02C  0211               	movf	toggleSound@initialTMR0,w
   446      02D  003F               	movwf	btemp+3
   447      02E  0212               	movf	toggleSound@track,w
   448      02F  003C               	movwf	btemp
   449      030  0C01               	movlw	1
   450      031  01DC               	addwf	btemp,w
   451      032  0024               	movwf	4
   452      033  021F               	movf	btemp+3,w
   453      034  0020               	movwf	0
   454      035                     l15:
   455      035  0800               	retlw	0
   456      036                     __end_of_toggleSound:
   457                           
   458                           	psect	text3
   459      072                     __ptext3:	
   460 ;; *************** function _initialize *****************
   461 ;; Defined at:
   462 ;;		line 13 in file "./MusicPlayer.h"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1   10[None  ] void 
   469 ;; Registers used:
   470 ;;		wreg
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0
   476 ;;      Params:         0       0
   477 ;;      Locals:         0       0
   478 ;;      Temps:          0       0
   479 ;;      Totals:         0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels used: 1
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489      072                     _initialize:	
   490                           ;psect for function _initialize
   491                           
   492      072                     l590:
   493                           
   494                           ;./MusicPlayer.h: 15:     TRIS = 0b1000;
   495      072  0C08               	movlw	8
   496      073  0006               	tris	6
   497                           
   498                           ;./MusicPlayer.h: 16:     OPTION = 0b11010101;
   499      074  0CD5               	movlw	213
   500      075  0002               	option
   501      076                     l11:
   502      076  0800               	retlw	0
   503      077                     __end_of_initialize:
   504      01C                     btemp	set	28	;btemp
   505      01C                     wtemp0	set	28
   506      01E                     wtemp1	set	30
   507      01C                     ttemp0	set	28
   508      01C                     ltemp0	set	28
   509                           
   510                           	psect	idloc
   511                           
   512                           ;Config register IDLOC0 @ 0x100
   513                           ;	unspecified, using default values
   514      100                     	org	256
   515      100  0FFF               	dw	4095
   516                           
   517                           ;Config register IDLOC1 @ 0x101
   518                           ;	unspecified, using default values
   519      101                     	org	257
   520      101  0FFF               	dw	4095
   521                           
   522                           ;Config register IDLOC2 @ 0x102
   523                           ;	unspecified, using default values
   524      102                     	org	258
   525      102  0FFF               	dw	4095
   526                           
   527                           ;Config register IDLOC3 @ 0x103
   528                           ;	unspecified, using default values
   529      103                     	org	259
   530      103  0FFF               	dw	4095
   531                           
   532                           	psect	config
   533                           
   534                           ;Config register CONFIG @ 0xFFF
   535                           ;	Oscillator
   536                           ;	OSC = 0x1, unprogrammed default
   537                           ;	Watchdog Timer
   538                           ;	WDTE = OFF, WDT disabled
   539                           ;	Code Protect
   540                           ;	CP = OFF, Code protection off
   541                           ;	Master Clear Enable
   542                           ;	MCLRE = ON, GP3/MCLR pin function  is MCLR
   543      FFF                     	org	4095
   544      FFF  0FFB               	dw	4091

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            14     11      11

Pointer List with Targets:

    playSound@track2	PTR struct Track size(1) Largest target is 2
		 -> main@track2(BANK0[2]), 

    playSound@track1	PTR struct Track size(1) Largest target is 2
		 -> main@track1(BANK0[2]), 

    toggleSound@track	PTR struct Track size(1) Largest target is 2
		 -> main@track2(BANK0[2]), main@track1(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_playSound
    _playSound->_toggleSound

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1064
                                              7 BANK0      4     4      0
                         _initialize
                          _playSound
 ---------------------------------------------------------------------------------
 (1) _playSound                                            4     3      1     874
                                              3 BANK0      4     3      1
                        _toggleSound
 ---------------------------------------------------------------------------------
 (2) _toggleSound                                          3     1      2     480
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
   _playSound
     _toggleSound

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0                E      B       B       3       78.6%
ABS                  0      0       0       4        0.0%
DATA                 0      0       0       5        0.0%
BITBANK0             E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jan 06 12:40:39 2023

                     l11 0076                       l20 0056                       l15 0035  
                     u50 0016                       u51 0015                       u60 001D  
                     u61 001C                       u80 0056                       u81 0055  
                     u74 0024                       u75 0022                       fsr 0004  
                    l600 0044                      l602 004D                      l610 005C  
                    l620 006C                      l612 0060                      l604 0057  
                    l614 0064                      l606 0058                      l616 0066  
                    l608 005A                      l618 0068                      l580 0004  
                    l590 0072                      l582 0016                      l584 001D  
                    l592 0037                      l586 002A                      l588 002C  
                    l598 0039                      fsr0 0004                      indf 0000  
                   _GPIO 0006                     _TMR0 0001                     _TRIS 0006  
                   _main 0057                     btemp 001C                     start 0000  
                  ?_main 0010                    ltemp0 001C                    ttemp0 001C  
                  status 0003                    wtemp0 001C                    wtemp1 001E  
 toggleSound@initialTMR0 0011          __initialization 0001             __end_of_main 0072  
                 ??_main 0000                   _OPTION 0000  __end_of__initialization 0001  
           ?_toggleSound 0010           __pcstackCOMMON 0000     toggleSound@pinNumber 0010  
             __pmaintext 0057          entry__playSound 00FC               _initialize 0072  
                __ptext1 0036                  __ptext2 0003                  __ptext3 0072  
   end_of_initialization 0001        __end_of_playSound 0057               main@track1 0017  
             main@track2 0019        entry__toggleSound 00FD              ?_initialize 0010  
    start_initialization 0001         playSound@counter 0015                ___latbits 0000  
          __pcstackBANK0 0010         toggleSound@track 0012                __pjmp_tab 00FC  
       entry__initialize 00FE                _playSound 0036          playSound@track1 0014  
        playSound@track2 0013            ??_toggleSound 0000               ?_playSound 0013  
           ??_initialize 0000       __end_of_initialize 0077      __end_of_toggleSound 0036  
            ??_playSound 0000              _toggleSound 0003  
