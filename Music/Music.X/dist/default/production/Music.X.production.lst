

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 05 16:25:45 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	10F200
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	jmp_tab,global,class=ENTRY,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x1C,4
    14      000                     
    15                           ; Version 2.40
    16                           ; Generated 06/12/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC10F200 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50      000                     	;# 
    51      001                     	;# 
    52      002                     	;# 
    53      003                     	;# 
    54      004                     	;# 
    55      005                     	;# 
    56      006                     	;# 
    57      001                     _TMR0	set	1
    58      006                     _GPIO	set	6
    59      000                     _OPTION	set	0
    60      006                     _TRIS	set	6
    61                           
    62                           	psect	cinit
    63      001                     start_initialization:	
    64                           ; #config settings
    65                           
    66      001                     __initialization:
    67      001                     end_of_initialization:	
    68                           ;End of C runtime variable initialization code
    69                           
    70      001                     __end_of__initialization:
    71      001  0064               	clrf	4
    72      002  0A03               	ljmp	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMMON
    75      000                     __pcstackCOMMON:
    76      000                     ??_initialize:
    77      000                     ??_toggleSound:	
    78                           ; 1 bytes @ 0x0
    79                           
    80      000                     ??_main:	
    81                           ; 1 bytes @ 0x0
    82                           
    83                           
    84                           	psect	cstackBANK0
    85      010                     __pcstackBANK0:	
    86                           ; 1 bytes @ 0x0
    87                           
    88      010                     ?_initialize:
    89      010                     ?_toggleSound:	
    90                           ; 1 bytes @ 0x0
    91                           
    92      010                     ?_main:	
    93                           ; 1 bytes @ 0x0
    94                           
    95      010                     toggleSound@pinNumber:	
    96                           ; 1 bytes @ 0x0
    97                           
    98                           
    99                           ; 1 bytes @ 0x0
   100      010                     	ds	1
   101      011                     toggleSound@initialTMR0:
   102                           
   103                           ; 1 bytes @ 0x1
   104      011                     	ds	1
   105      012                     toggleSound@track:
   106                           
   107                           ; 1 bytes @ 0x2
   108      012                     	ds	1
   109      013                     main@track1:
   110                           
   111                           ; 2 bytes @ 0x3
   112      013                     	ds	2
   113      015                     main@counter:
   114                           
   115                           ; 2 bytes @ 0x5
   116      015                     	ds	2
   117                           
   118                           	psect	maintext
   119      003                     __pmaintext:	
   120 ;;
   121 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   122 ;;
   123 ;; *************** function _main *****************
   124 ;; Defined at:
   125 ;;		line 29 in file "GuardianTheme.c"
   126 ;; Parameters:    Size  Location     Type
   127 ;;		None
   128 ;; Auto vars:     Size  Location     Type
   129 ;;  counter         2    5[BANK0 ] unsigned short 
   130 ;;  track1          2    3[BANK0 ] struct Track
   131 ;;  track2          2    0        struct Track
   132 ;; Return value:  Size  Location     Type
   133 ;;                  1   19[None  ] void 
   134 ;; Registers used:
   135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, pclath, cstack
   136 ;; Tracked objects:
   137 ;;		On entry : B00/0
   138 ;;		On exit  : 0/0
   139 ;;		Unchanged: 0/0
   140 ;; Data sizes:     COMMON   BANK0
   141 ;;      Params:         0       0
   142 ;;      Locals:         0       4
   143 ;;      Temps:          0       0
   144 ;;      Totals:         0       4
   145 ;;Total ram usage:        4 bytes
   146 ;; Hardware stack levels required when called: 1
   147 ;; This function calls:
   148 ;;		_initialize
   149 ;;		_toggleSound
   150 ;; This function is called by:
   151 ;;		Startup code after reset
   152 ;; This function uses a non-reentrant model
   153 ;;
   154                           
   155      003                     _main:	
   156                           ;psect for function _main
   157                           
   158      003                     l591:	
   159                           ;incstack = 0
   160                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+3+pclath+cstack]
   161                           
   162                           
   163                           ;GuardianTheme.c: 31:     initialize();
   164      003  09FE               	fcall	entry__initialize
   165      004                     l593:
   166                           
   167                           ;GuardianTheme.c: 36:     {;GuardianTheme.c: 37:         track1.clocks = 30;
   168      004  0C1E               	movlw	30
   169      005  0033               	movwf	main@track1
   170      006                     l595:
   171                           
   172                           ;GuardianTheme.c: 38:         for (counter = 0; counter<6000; counter++)
   173      006  0075               	clrf	main@counter
   174      007  0076               	clrf	main@counter+1
   175      008                     l601:
   176                           
   177                           ;GuardianTheme.c: 39:         {;GuardianTheme.c: 40:             toggleSound(&track1, 0,
      +                           TMR0);
   178      008  0070               	clrf	toggleSound@pinNumber
   179      009  0201               	movf	1,w	;volatile
   180      00A  0031               	movwf	toggleSound@initialTMR0
   181      00B  0C13               	movlw	(low (main@track1| 0))& (0+255)
   182      00C  09FD               	fcall	entry__toggleSound
   183      00D                     l603:
   184                           
   185                           ;GuardianTheme.c: 41:         }
   186      00D  0C01               	movlw	1
   187      00E  003C               	movwf	btemp
   188      00F  007D               	clrf	btemp+1
   189      010  021C               	movf	wtemp0,w
   190      011  01F5               	addwf	main@counter,f
   191      012  0603               	skipnc
   192      013  02B6               	incf	main@counter+1,f
   193      014  021D               	movf	wtemp0+1,w
   194      015  01F6               	addwf	main@counter+1,f
   195      016                     l605:
   196      016  0C17               	movlw	23
   197      017  0096               	subwf	main@counter+1,w
   198      018  0C70               	movlw	112
   199      019  0643               	skipnz
   200      01A  0095               	subwf	main@counter,w
   201      01B  0703               	skipc
   202      01C  0A1E               	goto	u91
   203      01D  0A1F               	goto	u90
   204      01E                     u91:
   205      01E  0A08               	goto	l601
   206      01F                     u90:
   207      01F                     l607:
   208                           
   209                           ;GuardianTheme.c: 43:         track1.clocks = 20;
   210      01F  0C14               	movlw	20
   211      020  0033               	movwf	main@track1
   212      021                     l609:
   213                           
   214                           ;GuardianTheme.c: 44:         for (counter = 0; counter<6000; counter++)
   215      021  0075               	clrf	main@counter
   216      022  0076               	clrf	main@counter+1
   217      023                     l615:
   218                           
   219                           ;GuardianTheme.c: 45:         {;GuardianTheme.c: 46:             toggleSound(&track1, 0,
      +                           TMR0);
   220      023  0070               	clrf	toggleSound@pinNumber
   221      024  0201               	movf	1,w	;volatile
   222      025  0031               	movwf	toggleSound@initialTMR0
   223      026  0C13               	movlw	(low (main@track1| 0))& (0+255)
   224      027  09FD               	fcall	entry__toggleSound
   225      028                     l617:
   226                           
   227                           ;GuardianTheme.c: 47:         }
   228      028  0C01               	movlw	1
   229      029  003C               	movwf	btemp
   230      02A  007D               	clrf	btemp+1
   231      02B  021C               	movf	wtemp0,w
   232      02C  01F5               	addwf	main@counter,f
   233      02D  0603               	skipnc
   234      02E  02B6               	incf	main@counter+1,f
   235      02F  021D               	movf	wtemp0+1,w
   236      030  01F6               	addwf	main@counter+1,f
   237      031                     l619:
   238      031  0C17               	movlw	23
   239      032  0096               	subwf	main@counter+1,w
   240      033  0C70               	movlw	112
   241      034  0643               	skipnz
   242      035  0095               	subwf	main@counter,w
   243      036  0703               	skipc
   244      037  0A39               	goto	u101
   245      038  0A3A               	goto	u100
   246      039                     u101:
   247      039  0A23               	goto	l615
   248      03A                     u100:
   249      03A  0A04               	goto	l593
   250      03B  0A00               	ljmp	start
   251      03C                     __end_of_main:
   252                           
   253                           	psect	text1
   254      03C                     __ptext1:	
   255 ;; *************** function _toggleSound *****************
   256 ;; Defined at:
   257 ;;		line 24 in file "./MusicPlayer.h"
   258 ;; Parameters:    Size  Location     Type
   259 ;;  track           1    wreg     PTR struct Track
   260 ;;		 -> main@track1(2), 
   261 ;;  pinNumber       1    0[BANK0 ] unsigned char 
   262 ;;  initialTMR0     1    1[BANK0 ] unsigned char 
   263 ;; Auto vars:     Size  Location     Type
   264 ;;  track           1    2[BANK0 ] PTR struct Track
   265 ;;		 -> main@track1(2), 
   266 ;; Return value:  Size  Location     Type
   267 ;;                  1    0[BANK0 ] void 
   268 ;; Registers used:
   269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+2, btemp+3
   270 ;; Tracked objects:
   271 ;;		On entry : 0/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMMON   BANK0
   275 ;;      Params:         0       2
   276 ;;      Locals:         0       1
   277 ;;      Temps:          0       0
   278 ;;      Totals:         0       3
   279 ;;Total ram usage:        3 bytes
   280 ;; Hardware stack levels used: 1
   281 ;; This function calls:
   282 ;;		Nothing
   283 ;; This function is called by:
   284 ;;		_main
   285 ;; This function uses a non-reentrant model
   286 ;;
   287                           
   288      03C                     _toggleSound:	
   289                           ;psect for function _toggleSound
   290                           
   291                           
   292                           ;toggleSound@track stored from wreg
   293      03C  0032               	movwf	toggleSound@track
   294      03D                     l581:
   295                           
   296                           ;./MusicPlayer.h: 24: void toggleSound(struct Track* track, unsigned char pinNumber, uns
      +                          igned char initialTMR0);./MusicPlayer.h: 25: {;./MusicPlayer.h: 26:     if (initialTMR0 
      +                          == (unsigned char)((*track).lastTimeUpdate+((*track).clocks)) && (*track).clocks !=0)
   297      03D  0211               	movf	toggleSound@initialTMR0,w
   298      03E  003F               	movwf	btemp+3
   299      03F  0212               	movf	toggleSound@track,w
   300      040  0024               	movwf	4
   301      041  0200               	movf	0,w
   302      042  003E               	movwf	btemp+2
   303      043  0212               	movf	toggleSound@track,w
   304      044  003C               	movwf	btemp
   305      045  0C01               	movlw	1
   306      046  01DC               	addwf	btemp,w
   307      047  0024               	movwf	4
   308      048  0200               	movf	0,w
   309      049  01DE               	addwf	btemp+2,w
   310      04A  019F               	xorwf	btemp+3,w
   311      04B  0743               	skipz
   312      04C  0A4E               	goto	u61
   313      04D  0A4F               	goto	u60
   314      04E                     u61:
   315      04E  0A6E               	goto	l15
   316      04F                     u60:
   317      04F                     l583:
   318      04F  0212               	movf	toggleSound@track,w
   319      050  0024               	movwf	4
   320      051  0200               	movf	0,w
   321      052  0643               	btfsc	3,2
   322      053  0A55               	goto	u71
   323      054  0A56               	goto	u70
   324      055                     u71:
   325      055  0A6E               	goto	l15
   326      056                     u70:
   327      056                     l585:
   328                           
   329                           ;./MusicPlayer.h: 27:     {;./MusicPlayer.h: 28:         GPIO ^= 1UL << pinNumber;
   330      056  0290               	incf	toggleSound@pinNumber,w
   331      057  003F               	movwf	btemp+3
   332      058  0C01               	movlw	1
   333      059  003E               	movwf	btemp+2
   334      05A  0A5D               	goto	u84
   335      05B                     u85:
   336      05B  0403               	clrc
   337      05C  037E               	rlf	btemp+2,f
   338      05D                     u84:
   339      05D  02FF               	decfsz	btemp+3,f
   340      05E  0A5B               	goto	u85
   341      05F  021E               	movf	btemp+2,w
   342      060  003F               	movwf	btemp+3
   343      061  021F               	movf	btemp+3,w
   344      062  01A6               	xorwf	6,f	;volatile
   345      063                     l587:
   346                           
   347                           ;./MusicPlayer.h: 29:         TMR0 = initialTMR0;
   348      063  0211               	movf	toggleSound@initialTMR0,w
   349      064  0021               	movwf	1	;volatile
   350      065                     l589:
   351                           
   352                           ;./MusicPlayer.h: 30:         (*track).lastTimeUpdate = initialTMR0;
   353      065  0211               	movf	toggleSound@initialTMR0,w
   354      066  003F               	movwf	btemp+3
   355      067  0212               	movf	toggleSound@track,w
   356      068  003C               	movwf	btemp
   357      069  0C01               	movlw	1
   358      06A  01DC               	addwf	btemp,w
   359      06B  0024               	movwf	4
   360      06C  021F               	movf	btemp+3,w
   361      06D  0020               	movwf	0
   362      06E                     l15:
   363      06E  0800               	retlw	0
   364      06F                     __end_of_toggleSound:
   365                           
   366                           	psect	jmp_tab
   367      0FD                     __pjmp_tab:	
   368                           ;incstack = 0
   369                           ; Regs used in _toggleSound: [wreg-fsr0h+status,2-btemp+0+btemp+2+btemp+3]
   370                           
   371      0FD                     entry__toggleSound:
   372      0FD  0A3C               	ljmp	_toggleSound
   373      0FE                     entry__initialize:	
   374                           ;incstack = 0
   375                           ; Regs used in _initialize: [wreg]
   376                           
   377      0FE  0A6F               	ljmp	_initialize
   378                           
   379                           	psect	text2
   380      06F                     __ptext2:	
   381 ;; *************** function _initialize *****************
   382 ;; Defined at:
   383 ;;		line 11 in file "./MusicPlayer.h"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1   10[None  ] void 
   390 ;; Registers used:
   391 ;;		wreg
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0
   397 ;;      Params:         0       0
   398 ;;      Locals:         0       0
   399 ;;      Temps:          0       0
   400 ;;      Totals:         0       0
   401 ;;Total ram usage:        0 bytes
   402 ;; Hardware stack levels used: 1
   403 ;; This function calls:
   404 ;;		Nothing
   405 ;; This function is called by:
   406 ;;		_main
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410      06F                     _initialize:	
   411                           ;psect for function _initialize
   412                           
   413      06F                     l579:
   414                           
   415                           ;./MusicPlayer.h: 13:     TRIS = 0b1000;
   416      06F  0C08               	movlw	8
   417      070  0006               	tris	6
   418                           
   419                           ;./MusicPlayer.h: 14:     OPTION = 0b11010100;
   420      071  0CD4               	movlw	212
   421      072  0002               	option
   422      073                     l11:
   423      073  0800               	retlw	0
   424      074                     __end_of_initialize:
   425      01C                     btemp	set	28	;btemp
   426      01C                     wtemp0	set	28
   427      01E                     wtemp1	set	30
   428      01C                     ttemp0	set	28
   429      01C                     ltemp0	set	28
   430                           
   431                           	psect	idloc
   432                           
   433                           ;Config register IDLOC0 @ 0x100
   434                           ;	unspecified, using default values
   435      100                     	org	256
   436      100  0FFF               	dw	4095
   437                           
   438                           ;Config register IDLOC1 @ 0x101
   439                           ;	unspecified, using default values
   440      101                     	org	257
   441      101  0FFF               	dw	4095
   442                           
   443                           ;Config register IDLOC2 @ 0x102
   444                           ;	unspecified, using default values
   445      102                     	org	258
   446      102  0FFF               	dw	4095
   447                           
   448                           ;Config register IDLOC3 @ 0x103
   449                           ;	unspecified, using default values
   450      103                     	org	259
   451      103  0FFF               	dw	4095
   452                           
   453                           	psect	config
   454                           
   455                           ;Config register CONFIG @ 0xFFF
   456                           ;	Oscillator
   457                           ;	OSC = 0x1, unprogrammed default
   458                           ;	Watchdog Timer
   459                           ;	WDTE = OFF, WDT disabled
   460                           ;	Code Protect
   461                           ;	CP = OFF, Code protection off
   462                           ;	Master Clear Enable
   463                           ;	MCLRE = ON, GP3/MCLR pin function  is MCLR
   464      FFF                     	org	4095
   465      FFF  0FFB               	dw	4091

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            14      7       7

Pointer List with Targets:

    toggleSound@track	PTR struct Track size(1) Largest target is 2
		 -> main@track1(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_toggleSound

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     623
                                              3 BANK0      4     4      0
                         _initialize
                        _toggleSound
 ---------------------------------------------------------------------------------
 (1) _toggleSound                                          3     1      2     480
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
   _toggleSound

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0                E      7       7       3       50.0%
ABS                  0      0       0       4        0.0%
DATA                 0      0       0       5        0.0%
BITBANK0             E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 05 16:25:45 2023

                     l11 0073                       l15 006E                       u60 004F  
                     u61 004E                       u70 0056                       u71 0055  
                     u90 001F                       u91 001E                       u84 005D  
                     u85 005B                       fsr 0004                      l601 0008  
                    l603 000D                      l605 0016                      l615 0023  
                    l607 001F                      l617 0028                      l609 0021  
                    l619 0031                      l581 003D                      l583 004F  
                    l591 0003                      l585 0056                      l593 0004  
                    l579 006F                      l587 0063                      l595 0006  
                    l589 0065                      u100 003A                      u101 0039  
                    fsr0 0004                      indf 0000                     _GPIO 0006  
            main@counter 0015                     _TMR0 0001                     _TRIS 0006  
                   _main 0003                     btemp 001C                     start 0000  
                  ?_main 0010                    ltemp0 001C                    ttemp0 001C  
                  status 0003                    wtemp0 001C                    wtemp1 001E  
 toggleSound@initialTMR0 0011          __initialization 0001             __end_of_main 003C  
                 ??_main 0000                   _OPTION 0000  __end_of__initialization 0001  
           ?_toggleSound 0010           __pcstackCOMMON 0000     toggleSound@pinNumber 0010  
             __pmaintext 0003               _initialize 006F                  __ptext1 003C  
                __ptext2 006F     end_of_initialization 0001               main@track1 0013  
      entry__toggleSound 00FD              ?_initialize 0010      start_initialization 0001  
              ___latbits 0000            __pcstackBANK0 0010         toggleSound@track 0012  
              __pjmp_tab 00FD         entry__initialize 00FE            ??_toggleSound 0000  
           ??_initialize 0000       __end_of_initialize 0074      __end_of_toggleSound 006F  
            _toggleSound 003C  
